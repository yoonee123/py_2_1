결과화면 조건에 만족하는 프로그램이 수행되도록 빈 괄호에 알맞은 정답을 작성하시오.



1. 다음은 파이썬의 다음 첫 번째 철학을 저장한 후, 메소드 replace()를 사용해 두 번째 철학으로 다시 저장하여 출력하는 프로그램이다.



=>결과화면

Beautiful is better than ugly.

위 철학을 메소드 replace()를 사용하여 다음 철학으로 다시 저장

Explicit is better than implicit.







=>프로그램

zen = 'Beautiful is better than ugly.'

print(zen)

print('위 철학을 메소드 replace()를 사용하여 다음 철학으로 다시 저장')

zen =(  1   ) .(  2   )((  3   ),(  4   ))

print((  1   ).(  2   )('ugly', 'implicit'))



정답

(1)zen

(2)replace

(3)'Beautiful'

(4)  'Explicit'





2. 다음은 문자열의 split() 메소드를 사용해 ’14:21:45’와 같은 시각 정보를 표준입력 받아 입력된 문자열도 출력하고 다시 시, 분, 초로 출력하는 프로그램이다. 



=>입력화면

시각 정보(16:30:15) 입력 >> 17:29:52



=>결과화면

입력 시각 정보: 17:29:52

17시 29분 52초





=>프로그램



time = (  1   )('시각 정보(16:30:15) 입력 >> ')

hours, mins, secs = time.(  2   )(':')

print('입력 시각 정보: %s' (  3   ) time)

print('(     4     )'.format(hours, mins, secs))





(1)input

(2)split

(3)%

(4){}시 {}분 {}초











3. 입력화면의 입력문자내용이 Python String Slicing 일 경우 다음 프로그램의 결과를 작성하시오.



=>입력화면

다섯 문자 이상의 문자열 입력 >> Python String Slicing





=>프로그램

str = input('다섯 문자 이상의 문자열 입력 >> ')

print('입력 문자열: %s' % str)

print("첫 문자: %c" % str[:1])

print("마지막 문자: %c" % str[-1:])

print("첫 문자를 제외한 부분 문자열: %s" % str[1:])

print("마지막 문자를 제외한 부분 문자열: %s" % str[:-1])

print("맨 앞과 뒤의 두 문자씩를 제외한 부분 문자열: %s" % str[2:-2])

print("문자 하나씩을 건너 뛴 부분 문자열: %s" % str[::2])

print("역 문자열: %s" % str[::-1])





정답



입력 문자열: Python String Slicing

첫 문자: P

마지막 문자: g

첫 문자를 제외한 부분 문자열: ython String Slicing

마지막 문자를 제외한 부분 문자열: Python String Slicin

맨 앞과 뒤의 두 문자씩를 제외한 부분 문자열: thon String Slici

문자 하나씩을 건너 뛴 부분 문자열: Pto tigSiig

역 문자열 gnicilS gnirtS nohtyP





4.입력화면의 입력문자내용이 Python is a good language! 일 경우 다음 프로그램의 결과를 작성하시오.



=>입력화면

문자열 입력 >> Python is a good language!



참조할 첨자 입력 >> 12





=>프로그램

str = input('문자열 입력 >> ')

strLen = len(str)

print('참조할 첨자: 0 ~ {}'.format(strLen-1))

n = int(input('참조할 첨자 입력 >> '))

print('문자열: ', str, ', 길이: ', strLen)

print('참조 문자: ', str[n])





=>정답

참조할 첨자: 0 ~ 25

문자열: Python is a good language!, 길이: 26

참조 문자: g





5.  다음과 같은 결과가 출력되도록 프로그램의 빈공간을 작성하시오./



[결과]

미세먼지(10마이크로그램)의 농도는 ?(예: 23.3) 23.5

미세먼지 농도: 23.50, 등급: 좋음

=============================

[등급 조건]

151이상이면 매우나쁨

151미만 81이상이면 나쁨

81미만 31이상이면 보통

31미만이면 좋음

=================

[프로그램]

PM = float(input('미세먼지(10마이크로그램)의 농도는 ?(예: 23.3) '))

#PM = 90 #particulate matter: 미세먼지

if (   1    ):

    print('미세먼지 농도: {:.2f}, 등급: {}'.format(PM, '매우 나쁨'))

(   4    )  (   2    ):

    print('미세먼지 농도: {:.2f}, 등급: {}'.format(PM, '나쁨'))

(   4    )  (   3    ):

    print('미세먼지 농도: {:.2f}, 등급: {}'.format(PM, '보통'))

(   5    ) (  6    )

    print('미세먼지 농도: {:.2f}, 등급: {}'.format(PM, '좋음'))





정답

151 <= PM

81 <= PM

31 <= PM

elif 

else

:



6. 수치하나 입력받아 다음과 같은 결과화면이 출력되도록 빈 공간에 알맞은 정답을 작성하시오.



[결과]

6

10이하의 짝수

[조건]

입력된 수치가 10보다 큰 짝수, 홀수인지 아니면 10이하의 짝수, 홀수인지 판단

[프로그램]

a = int(input())



if (   1    ) :

    if (   2       ) :

        print('10보다 큰 짝수')

    (   3    ) (   4    )

        print('10보다 큰 홀수')        

(   3    ) (   4    )

    if (   5    ) :

        print('10이하의 짝수')

    else :

        print('10이하의 홀수')





=> 정답

a > 10

a % 2 == 0

else 

:

a % 2 == 0







7. 평균평점 입력받아 다음과 같은 결과화면이 출력되도록 빈 공간에 알맞은 정답을 작성하시오.



[결과]

1학기 평균평점은(예: 3.9)? 4.5

축하합니다! 장학금 지급 대상자입니다.

당신의 1학기 평균평점 4.50입니다.

[조건]

# 평균평점 3.8이상이면 장학금 지급 대상자

[프로그램]

grade = (   1    )(input('1학기 평균평점은(예: 3.9)? '))

if 3.8 <= grade:

    print('축하합니다! 장학금 지급 대상자입니다.')

print('당신의 1학기 평균평점(   2    )입니다.' % (grade))



=>정답

float

%.2f